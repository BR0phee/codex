#!/usr/bin/env bash

set -e # Exit immediately if a simple command exits with exit code >0
set -u # Report usage of any uninitialized variables.

timestamp() { date +'%Y-%m-%dT%H:%M:%S%z'; }

log() { echo "[$(timestamp)]: $*" ; }

err() { log "[err] $*" >&2 ; }

fatal() { log "[fatal] $*" >&2 ; exit 1 ; }

install_dependencies() {
  # for each binary we define a version, binary name, and version check.
  ready_to_brew
  check_install "node 6.3.0" "brew install" node "brew list --versions node"
  check_install "0.12.16" "npm install -g" markdown-toc "npm view markdown-toc version"
  echo "Dependencies checked or installed."
}

ready_to_brew() {
  brew doctor
  RESULT=$?
  if [[ RESULT -eq 0 ]] ; then
  brew update
  else
    echo "Run brew doctor and complete prompts, errors were reported."
  fi
}

check_install() {
  local _install=false _version=${1} _install_cmd=${2} _bin=${3} _check=${4}

  log "Checking for ${_bin} ... "

  echo `which ${_bin}`

  if [[ -z `which ${_bin}` ]]
  then
    _install=true
  else
    if [[ `${_check}` != "${_version}" ]]
    then
      _install=true
    fi
  fi

  if [[ ${_install} == true ]]
  then
    log "Installing ${_bin} ${_version} ..."
    ${_install_cmd} ${_bin}
    log "OK, ${_bin} ${_version} installed."
  else
    log "OK, ${_bin} is ${_version}"
  fi
}

create_contents() {
  markdown-toc ${1} | sed -e "s/#/${1}#/g"
}

generate_toc(){
  guides=(
    aws.md
    azure.md
    openstack.md
    google.md
  )

  for guide in "${guides[@]}"
  do
    create_contents ${guide}
  done

  echo "---"

  topics=(
    tls.md
    openvpn.md
    vault.md
    network.md
    troubleshooting.md
  )

  for topic in "${topics[@]}"
  do
    create_contents ${topic}
  done
}

output_to_file() {
  echo "Generating structure to TOC.md file."
  generate_toc > TOC.md
}

install_dependencies
output_to_file
