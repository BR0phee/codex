#!/usr/bin/env bash

set -e # Exit immediately if a simple command exits with exit code >0

OLD_AWS=${AWS_CONFIG_FILE}

write_aws_config() {
  sed 's/"//g; s/aws_access_key = /aws_access_key_id=/g; s/aws_secret_key = /aws_secret_access_key=/g; s/aws_region = /region=/g; /aws_vpc_name/d; /aws_key_name/d;' ${PWD}/aws.tfvars > ${PWD}/aws_config 
  if [[ -z $(grep region "aws_config") ]]
  then
    echo "No region found, using us-west-2"
    echo "region=us-west-2" >> ${PWD}/aws_config
  else
    echo "Found a region in the vars."
    grep region "aws_config" 
  fi
  echo '[default]' | cat - ${PWD}/aws_config > temp && mv temp ${PWD}/aws_config
  export AWS_CONFIG_FILE=${PWD}/aws_config
  echo "Setting AWS Config to '${AWS_CONFIG_FILE}'"
}

show_instances() {
  echo "Note if this takes substantial time, then the VPC or instances could not be found."
  vpcname=$(sed -n -e 's/"//g; s/ //g; s/=//g; s/aws_vpc_name//p' ${PWD}/aws.tfvars)
  vpc=$(aws ec2 describe-vpcs --filters Name=tag-value,Values=${vpcname} | jq -r -c '.Vpcs[] | .VpcId ')
  echo "Pulling all instances belonging to VPC named '${vpcname}' with ID '${vpc}'" 
  echo "" 
  cat ${AWS_CONFIG_FILE}
  echo "" 
  if [[ $# -eq 0 ]]; then
    aws ec2 describe-instances --filters Name=vpc-id,Values=${vpc} | jq '.Reservations[] | .Instances[] | .InstanceId' 
  else
    aws ec2 describe-instances --filters Name=vpc-id,Values=${vpc} | jq '.Reservations[] | .Instances[] | .InstanceId' | sed 's/"//g' > ${1} 
  fi 
}

cleanup() {
  rm "${AWS_CONFIG_FILE}"
  rm instance_list
  export AWS_CONFIG_FILE=${OLD_AWS}
  echo "Reset AWS Config to '${AWS_CONFIG_FILE}'."
}

shutdown_instances() {

  show_instances instance_list
  echo "* * * * * * * * * * * * * *"
  cat instance_list
  echo "* * * * * * * * * * * * * *"
  echo "You are about to terminate the above the instances."
  echo "WARNING:  This may include instances booted outside of Terraform.  Please double check the list if needed"
  read -r -p "Are you sure? [y/N] " response
  if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]
  then
    IFS=$'\n'  # make newlines the separator
    for i in `cat ./instance_list`; do
      echo "Shutting down $i"
      aws ec2 terminate-instances --instance-ids $i
    done
  else
    echo "Nothing shutdown, exiting..."
  fi
  unset IFS

}

main() {
  # Write the config file for the AWS based on the aws.tfvars file
  write_aws_config
  # Shut down the instances with AWS cli
  shutdown_instances
  # Remove the aws_config file and reset variable to the original location
  cleanup
}

main "${@-help}"

exit $?
